#Copyright (c) 2020, Oracle and/or its affiliates.
#The Universal Permissive License (UPL), Version 1.0
#
# Prepare source RMAN for backup into OSS 
#

# Upload Oracle Database Cloud Backup Module
- name: Upload Oracle Database Cloud Backup Module
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}" 
  copy:
    src: "{{ opc_installer_zip_src_location }}"
    dest: "{{ opc_installer_zip_dest_location }}"

# Unzip Oracle Database Cloud Backup Module
- name: Unzip Oracle Database Cloud Backup Module
  become: yes
  become_method: sudo 
  become_user: "{{ oracle_user }}" 
  unarchive:
    src: "{{ opc_installer_zip_dest_location }}"
    dest: "{{ opc_installer_dest_location }}"
    remote_src: yes

# Setup Oracle Database Cloud Backup Module
- name: Setup Oracle Database Cloud Backup Module
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}" 
  oracle_cloud_odcb_module:
    opc_install_location: "{{ opc_installer_dest_location }}/opc_installer/opc_installer/"
    host: "{{ oci_swiftobjectstorage_url }}"
    opc_id: "{{ oci_user }}"
    opc_pass: "{{ oci_authtoken_pass }}"
    container: "{{ oci_oss_container }}"
    wallet_dir: "{{ wallet_dir }}"
    lib_dir: "{{ lib_dir }}"
    config_file: "{{ config_file }}"

# Configure RMAN's channel device SBT_TAPE to use libopc.so library (source RAC)
- name: Configure RMAN's channel device SBT_TAPE to use libopc.so library (source RAC)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"   
  oracle_rman_module:
    oracle_sid: "{{ oracle_source_database_sid }}1"
    oracle_home: "{{ oracle_source_ohome_dir }}"
    rman_script: "{{ lookup('template', '../templates/rman_configure_channel_device_to_oss_script.j2') }}"
    rman_logfile: "{{ rman_log_path }}/rman_configure_channel_device_to_oss_{{ oracle_source_database_sid }}_{{ansible_date_time.iso8601_basic_short}}.log"
    output_as_array: True
    output_omit_heading: True
    output_omit_ending: True  
  register: rmanoutput1
  when: (oracle_source_RAC == 'True') and (configure_channel_device_type_sbt_type == 'True')

# Configure RMAN's channel device SBT_TAPE to use libopc.so library (source SI)
- name: Configure RMAN's channel device SBT_TAPE to use libopc.so library (source SI)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"   
  oracle_rman_module:
    oracle_sid: "{{ oracle_source_database_sid }}"
    oracle_home: "{{ oracle_source_ohome_dir }}"
    rman_script: "{{ lookup('template', '../templates/rman_configure_channel_device_to_oss_script.j2') }}"
    rman_logfile: "{{ rman_log_path }}/rman_configure_channel_device_to_oss_{{ oracle_source_database_sid }}_{{ansible_date_time.iso8601_basic_short}}.log"
    output_as_array: True
    output_omit_heading: True
    output_omit_ending: True  
  register: rmanoutput1
  when: (oracle_source_RAC == 'False') and (configure_channel_device_type_sbt_type == 'True')

# Configure RMAN to use SBT_TAPE by default, backup optimization to OFF etc (source RAC)
- name: Configure RMAN to use SBT_TAPE by default, backup optimization to OFF etc (source RAC)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"    
  oracle_rman_module:
    oracle_sid: "{{ oracle_source_database_sid }}1"
    oracle_home: "{{ oracle_source_ohome_dir }}"
    rman_script: "{{ lookup('template', '../templates/rman_configure_script.j2') }}"
    rman_logfile: "{{ rman_log_path }}/rman_configure_{{ oracle_source_database_sid }}_{{ansible_date_time.iso8601_basic_short}}.log"
    output_as_array: True
    output_omit_heading: True
    output_omit_ending: True  
  register: rmanoutput2
  when: oracle_source_RAC == 'True'

# Configure RMAN to use SBT_TAPE by default, backup optimization to OFF etc (source SI)
- name: Configure RMAN to use SBT_TAPE by default, backup optimization to OFF etc (source SI)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"    
  oracle_rman_module:
    oracle_sid: "{{ oracle_source_database_sid }}"
    oracle_home: "{{ oracle_source_ohome_dir }}"
    rman_script: "{{ lookup('template', '../templates/rman_configure_script.j2') }}"
    rman_logfile: "{{ rman_log_path }}/rman_configure_{{ oracle_source_database_sid }}_{{ansible_date_time.iso8601_basic_short}}.log"
    output_as_array: True
    output_omit_heading: True
    output_omit_ending: True  
  register: rmanoutput2
  when: oracle_source_RAC == 'False'

