#Copyright (c) 2020, Oracle and/or its affiliates.
#The Universal Permissive License (UPL), Version 1.0
#
# Convert SI to ExaCS RACNODE2+
#

# Show target_exacs_hostname_index
- name: Show target_exacs_hostname_index
  debug:
    msg: "target_exacs_hostname_index = {{ target_exacs_hostname_index }}"

# Show target_exacs_oracle_instance_index
- name: Show target_exacs_oracle_instance_index
  debug:
    msg: "target_exacs_oracle_instance_index = {{ target_exacs_oracle_instance_index }}"

# Make directory for audit trail on target racnode2+
- name: Make directory for audit trail on target racnode2+
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}" 
  file: path={{ oracle_target_racnode2_adump_dir }} state=directory

# Create PFILE for racnode2+
- name: Create PFILE for racnode2+
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  copy:
    content: "SPFILE='{{ grid_target_data_dg }}/{{ oracle_target_database_unique_name }}/spfile{{ oracle_source_database_sid }}.ora'"
    dest: "{{ oracle_target_ohome_dir }}/dbs/init{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}.ora"

# Adding source instance2+ on the target to CRS registry (SRVCTL 12c+)
- name: Adding source instance2+ on the target to CRS registry (SRVCTL 12c+)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_srvctl_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_database: "{{ oracle_target_database_unique_name }}"
    oracle_instance: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    oracle_node: "{{ ansible_hostname }}"
    srvctl_command: "add instance"
  register: srvctloutput3  
  when: (oracle_source_version == '12.1.0.2') or (oracle_source_version == '12.2.0.1') or (oracle_source_version == '18.0.0.0')

# Start source instance2+ on target racnode2 (SQLPLUS)
- name: Start source instance2+ on target racnode2 (SQLPLUS) 
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_sqlplus_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_sid: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    oracle_unqname: "{{ oracle_target_database_unique_name }}"
    sql_statement: 'startup open;'
    output_as_array: True
    ignore_ORA_errors: True    
  register: sqlplusoutput10 

# Adding source instance2+ on the target to CRS registry (SRVCTL 11g)
- name: Adding source instance2+ on the target to CRS registry (SRVCTL 11g)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_srvctl_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_database: "{{ oracle_target_database_unique_name }}"
    oracle_instance: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    oracle_unqname: "{{ oracle_source_database_sid }}"
    oracle_node: "{{ ansible_hostname }}"
    srvctl_command: "add instance"
    syntax_11g: True
  register: srvctloutput3  
  when: oracle_source_version == '11.2.0.4'

# Showing TDE wallet status on the racnode2+ (SQLPLUS 12c+)
- name: Showing TDE wallet status on the racnode2+ (SQLPLUS 12c+) 
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_sqlplus_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_sid: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    oracle_unqname: "{{ oracle_target_database_unique_name }}"
    sql_statement: 'select wrl_parameter, status, wallet_type from v$encryption_wallet;'
    output_as_array: True
    ignore_ORA_errors: True    
  register: sqlplusoutput11  
  when: (oracle_source_version == '12.1.0.2') or (oracle_source_version == '12.2.0.1')  or (oracle_source_version == '18.0.0.0')

# Showing TDE wallet status on the racnode2+ (SQLPLUS 11g)
- name: Showing TDE wallet status on the racnode2+ (SQLPLUS 11g) 
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_sqlplus_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_sid: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    oracle_unqname: "{{ oracle_target_database_unique_name }}"
    sql_statement: 'select * from v$encryption_wallet;'
    output_as_array: True
    ignore_ORA_errors: True    
  register: sqlplusoutput11  
  when: oracle_source_version == '11.2.0.4'

# Add entry to /etc/oratab for instance2+ on racnode2
- name: Add entry to /etc/oratab for instance2+ on racnode2
  become: yes
  become_method: sudo  
  lineinfile:
    path: "/etc/oratab"
    regexp: "^{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}[:]"
    line: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}:{{ oracle_target_ohome_dir }}:N"
    owner: "{{ oracle_user }}"  

# Checking if database is CDB or non-CDB (12c+)
- name: Checking if database is CDB or non-CDB (12c+)
  become: yes
  become_method: sudo
  become_user: "{{ oracle_user }}"
  oracle_sqlplus_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_sid: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    sql_statement: "SELECT CDB FROM V$DATABASE;"
    output_as_array: True
  register: sqlplusoutput3
  when: oracle_source_version != '11.2.0.4'

# Set fact for cdb_database (12c+)
- name: Set fact for cdb_database (12c+)
  set_fact:
    cdb_database: "{{ sqlplusoutput3.sqlplus_message[0][0] }}"
  when: oracle_source_version != '11.2.0.4'

# Set fact for cdb_database (11g)
- name: Set fact for cdb_database (11g)
  set_fact:
    cdb_database: "NO"
  when: oracle_source_version == '11.2.0.4'

# Obtaining PDBs name from instance 2+ on racnode2+ (for tnsnames.ora)
- name: Obtaining PDBs name from instance 2+ on racnode2+ (for tnsnames.ora)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_sqlplus_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_sid: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    sql_statement: "select name from v$pdbs where name NOT LIKE 'PDB%SEED';"
    output_as_array: True    
  register: sqlplusoutput20
  when: (cdb_database == True) and ((oracle_source_version == '12.1.0.2') or (oracle_source_version == '12.2.0.1')  or (oracle_source_version == '18.0.0.0'))

# Set PDBs list (without PDB$SEED) as fact (for tnsnames.ora)
- name: Set PDBs list (without PDB$SEED) as fact (for tnsnames.ora)
  set_fact:
    pdbs_list_without_pdbseed: "{{ sqlplusoutput20.sqlplus_message[0] }}"  
  when: (cdb_database == True) and ((oracle_source_version == '12.1.0.2') or (oracle_source_version == '12.2.0.1')  or (oracle_source_version == '18.0.0.0'))

# Discovery of CRS data (for tnsnames.ora) on racnode2+
- name: Discovery of CRS data (for tnsnames.ora) on racnode2+
  become: yes
  become_method: sudo
  become_user: oracle
  oracle_dbnode_discovery_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_gi_home: "{{ grid_target_ohome_dir }}"
    accept_data_not_found: True
  register: dbnode_discovery_output    

# Set target_scan_dns_name fact (for tnsnames.ora) on racnode2+ 
- name: Set target_scan_dns_name fact (for tnsnames.ora) on racnode2+
  set_fact:
    target_scan_dns_name: "{{ dbnode_discovery_output.scan_dns_name }}"   

# Set target_scan_dns_domain fact (for tnsnames.ora) on racnode2+
- name: Set target_scan_dns_domain fact (for tnsnames.ora) on racnode2+
  set_fact:
    target_scan_dns_domain: "{{ dbnode_discovery_output.dns_domain }}"    

# Clean tnsnames.ora before new cluster one
- name: Clean tnsnames.ora before new cluster one
  become: yes
  become_method: sudo
  become_user: "{{ oracle_user }}"
  file:
    state: absent
    path: "{{ oracle_target_ohome_dir }}/network/admin/{{ oracle_source_database_sid }}/tnsnames.ora"

# Upload tnsnames.ora file template for instance2+ on racnode2+ (multitenant with PDBs)
- name: Upload tnsnames.ora file template for instance2+ on racnode2+ (multitenant with PDBs)
  become: yes
  become_method: sudo  
  template:
    src: "../templates/tnsnames.ora_multitenant.j2"
    dest: "{{ oracle_target_ohome_dir }}/network/admin/{{ oracle_source_database_sid }}/tnsnames.ora"
    owner: "{{ oracle_user }}"   
  when: (cdb_database == True) and ((oracle_source_version == '12.1.0.2') or (oracle_source_version == '12.2.0.1')  or (oracle_source_version == '18.0.0.0'))

# Upload tnsnames.ora file template for instance2+ on racnode2+ (no multitenant 11g without PDBs)
- name: Upload tnsnames.ora file template for instance2+ on racnode2+ (no multitenant 11g without PDBs)
  become: yes
  become_method: sudo  
  template:
    src: "../templates/tnsnames.ora_11g.j2"
    dest: "{{ oracle_target_ohome_dir }}/network/admin/{{ oracle_source_database_sid }}/tnsnames.ora"
    owner: "{{ oracle_user }}"   
  when: (oracle_source_version == '11.2.0.4') or (cdb_database == False)

# Obtaining size of redo logs
- name: Obtaining size of redo logs
  become: yes
  become_method: sudo
  become_user: "{{ oracle_user }}"
  oracle_sqlplus_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_sid: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    sql_statement: "select unique bytes from v$log;"
    output_as_array: True
  register: sqlplusoutput1
  when: oracle_source_RAC == 'False'

# Set fact for size of redo
- name: Set fact for size of redo
  set_fact:
    target_redo_size: "{{ sqlplusoutput1.sqlplus_message[0][0] }}" 
  when: oracle_source_RAC == 'False'

# Obtaining number of redo for thread 1
- name: Obtaining number of redo for thread 1
  become: yes
  become_method: sudo
  become_user: "{{ oracle_user }}"
  oracle_sqlplus_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_sid: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    sql_statement: "select trim(count(*)) from v$log where thread#=1;"
    output_as_array: True
  register: sqlplusoutput1
  when: oracle_source_RAC == 'False'

# Set fact for number of redo in thread 1
- name: Set fact for number of redo in thread 1
  set_fact:
    target_redo_log_number_thread1: "{{ sqlplusoutput1.sqlplus_message[0][0] }}"        
  when: oracle_source_RAC == 'False'

# Adding the rest of redo logs for redo thread 2+ group to second target node
- name: Adding the rest of redo logs for redo thread 2+ group to second target node
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_sqlplus_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_sid: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    sql_statement: "alter database add logfile thread {{ target_exacs_oracle_instance_index }} group {{ (target_exacs_hostname_index | int) * (target_redo_log_number_thread1 | int) +  (item | int) }} ('{{ grid_target_reco_dg }}') size {{ target_redo_size }} reuse;" 
  register: sqlplusoutput1
  with_sequence: start=3 end={{ target_redo_log_number_thread1 }} 
  when: oracle_source_RAC == 'False'

# Starting source instance2+ on the target racnode2 (SRVCTL 12c+)
- name: Starting source instance2+ on the target racnode2 (SRVCTL 12c+)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_srvctl_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_database: "{{ oracle_target_database_unique_name }}"
    oracle_instance: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    srvctl_command: "start instance"
  register: srvctloutput3 
  when: (oracle_source_version == '12.1.0.2') or (oracle_source_version == '12.2.0.1') or (oracle_source_version == '18.0.0.0') 

# Show status of source database on the target again (taken from to CRS registry with SRVCTL 12c+)
- name: Show status of source database on the target again (taken from to CRS registry with SRVCTL 12c+)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_srvctl_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_database: "{{ oracle_target_database_unique_name }}"
    srvctl_command: "status database"
  register: srvctloutput10  
  when: (oracle_source_version == '12.1.0.2') or (oracle_source_version == '12.2.0.1')  or (oracle_source_version == '18.0.0.0')

# Showing status of source database on the target again (taken from to CRS registry with SRVCTL)
- name: Showing status of source database on the target again (taken from to CRS registry with SRVCTL)
  debug: 
    msg: "{{ srvctloutput10.srvctl_output }}"
  when: (oracle_source_version == '12.1.0.2') or (oracle_source_version == '12.2.0.1')  or (oracle_source_version == '18.0.0.0')
  
# Starting source instance2+ on the target racnode2 (SRVCTL 11g)
- name: Starting source instance2+ on the target racnode2 (SRVCTL 11g)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_srvctl_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_database: "{{ oracle_target_database_unique_name }}"
    oracle_instance: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    oracle_unqname: "{{ oracle_source_database_sid }}"
    srvctl_command: "start instance"
    syntax_11g: True
  register: srvctloutput3 
  when: oracle_source_version == '11.2.0.4'

# Pause for 3 minutes before second starting source instance2+ on the target racnode2 (SRVCTL 11g)
- name: Pause for 3 minutes before second starting source instance2+ on the target racnode2 (SRVCTL 11g)
  pause:
    minutes: 3
  when: oracle_source_version == '11.2.0.4'  

# Starting source instance2+ on the target racnode2 (SRVCTL 11g)
- name: Starting source instance2+ on the target racnode2 (SRVCTL 11g)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_srvctl_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_database: "{{ oracle_target_database_unique_name }}"
    oracle_instance: "{{ oracle_source_database_sid }}{{ target_exacs_oracle_instance_index }}"
    oracle_unqname: "{{ oracle_source_database_sid }}"
    srvctl_command: "start instance"
    syntax_11g: True
  register: srvctloutput3 
  when: oracle_source_version == '11.2.0.4'  

# Obtaining status of source database on the target again (taken from to CRS registry with SRVCTL 11g)
- name: Obtaining status of source database on the target again (taken from to CRS registry with SRVCTL 11g)
  become: yes
  become_method: sudo  
  become_user: "{{ oracle_user }}"
  oracle_srvctl_module:
    oracle_home: "{{ oracle_target_ohome_dir }}"
    oracle_database: "{{ oracle_target_database_unique_name }}"
    srvctl_command: "status database"
    oracle_unqname: "{{ oracle_source_database_sid }}"
    syntax_11g: True
  register: srvctloutput10  
  when: oracle_source_version == '11.2.0.4'  

# Showing status of source database on the target again (taken from to CRS registry with SRVCTL)
- name: Showing status of source database on the target again (taken from to CRS registry with SRVCTL)
  debug: 
    msg: "{{ srvctloutput10.srvctl_output }}"
  when: oracle_source_version == '11.2.0.4'   






